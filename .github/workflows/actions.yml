name: Actions Workflow

# instead of having multiple action on array we can add them as an object on: [push, pull_request]
on:
  push:
    branches:
      - master
      - 'feature/*' # matches feature/featA, feature/featB,doesn't match feature/feat/a
      - 'feature/**' # matches feature/feat/a
      - '!feature/featC' # the ! will ignore the  branch
    tags:
      - v1.*
    paths:
      - '**.js'
      - '!filename.js'
#    paths-ignore:
#      - 'docs/**'


# Repository_dispatch can be triggered manually when we send a post request to some URL
  # repository_dispatch:
    # types: [build]
# In order to trigger a job on schedule we need to use a cron schedule expression
  # schedule:
  #   - cron: "0/2 * * * *"
  #   - cron: "0/3 * * * *"
  # push:
  # pull_request:
  #   types: [closed, assigned, opened, reopened]

jobs:
  run-github-actions:
    runs-on: ubuntu-latest
    steps:
      - name: payload
        run: echo ${{ github.event.client_payload.env }}
      - name: List Files
        run: |
          pwd
          ls -anil
          # Instead of using the "checkout" name we can add the bellow to have the same output
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo "${{ github.token }}"
          # git clone git@github:$GITHUB_REPOSITORY
          # git checkout $GITHUB_SHA
      - name: Checkout
        uses: actions/checkout@v1
      - name: List Files After checkout
        run: |
          pwd
          ls -anil
      - name: Simple JS Action
        id: greet
        uses: actions/hello-world-javascript-action@v1
        with:
          who-to-greet: James
      - name: Log Greeting Time
        run: echo "${{ steps.greet.outputs.time }}"